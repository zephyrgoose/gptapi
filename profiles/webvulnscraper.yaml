# webvulnscraper.yaml
# This file defines the configuration for interacting with the GPT API.
# It includes all necessary parameters, with the actual API keys stored in a separate keys.yaml file.

# Model to be used. 
model: gpt-4o-mini-2024-07-18
#model: gpt-4o-2024-08-06

credentials_file: ./keys.yaml
# External file where API keys are stored. This keeps the main configuration secure and clean.

system_prompt: |
  You are a web scraper focused on succinctly collecting threat intelligence data from various sources on the internet. Depending on the content of the webpage, dynamically determine whether you are in "link aggregation" or "data scraping" mode.

  1. Link Aggregation Mode:
     - Identify and collect links from hubs, directories, or indexes of threat intelligence reports, indicators of compromise (IOCs), or related resources.
     - For each link, return the URL, a brief but specific description of the expected threat intelligence content, and the source or method of how the link was found.

  2. Data Scraping Mode:
     - Extract the main content from the current page focused on threat intelligence, such as details about specific threats, attack techniques, or IOCs. Ignore ads, distractions, or unrelated content.
     - Return the page title, the extracted content, and the source context of where the content was extracted from on the page.
     - `threatBreakdown` must be comprehensive and include every single discrete piece of threat intel reported in the provided text - have as many objects in the array as necessary.

  Determine the appropriate mode after analyzing the webpage and return the structured data accordingly.

parameters:
  max_tokens: 4000
  temperature: 0.9
  top_p: 0.8
  n: 1
  stop: None
  frequency_penalty: 0.0  # Controls how much the model penalises new tokens based on their existing frequency in the text so far.
  presence_penalty: 0.0 # Controls how much the model penalises new tokens based on whether they appear in the text so far.

structured_output:
  name: ThreatIntelligenceScraperSchema
  strict: true
  schema:
    type: object
    properties:
      contentData:
        type: object
        description: "Details of the threat intelligence content on the page."
        properties:
          title:
            type: string
            description: "The title of the page or main content being scraped."
          content:
            type: string
            description: "The main content succinctly extracted from the page, focused on threat intelligence."
          summary:
            type: string
            description: "A technically dense, accurate summary of the main content extracted from the page."
          important:
            type: boolean
            description: "Indicates if the content is of the highest significance or relevance."
          threatBreakdown:
            type: array
            description: "An exhaustive breakdown of specific threats, exploits, or concerns mentioned in the content."
            items:
              type: object
              properties:
                threatType:
                  type: string
                  description: "A summary of the type of threat."
                description:
                  type: string
                  description: "A detailed description of the threat or important information."
                scope:
                  type: string
                  description: "Technical description to ascertain exposure."
              required:
                - threatType
                - description
                - scope
              additionalProperties: false
          source:
            type: string
            description: "Source or context of where the content was extracted from on the page."
          date:
            type: string
            description: "The date and time when the content was scraped or published."
        required:
          - title
          - content
          - summary
          - important
          - threatBreakdown
          - source
          - date
        additionalProperties: false
      optionalLinks:
        type: array
        description: "Details of important, relevant URLs found on the page, if any."
        items:
          type: object
          properties:
            url:
              type: string
              description: "The URL of the important, relevant link found."
            description:
              type: string
              description: "A brief description of the specific threat intelligence content expected at the URL."
            source:
              type: string
              description: "A descriptive source or method of how the link was found."
          required:
            - url
            - description
            - source
          additionalProperties: false
    required:
      - contentData
      - optionalLinks
    additionalProperties: false


logging:
  enable: true
  log_level: INFO
  log_file: ./logs/api_calls.log
# Logging configuration for debugging and auditing purposes. Helps in tracking and troubleshooting issues.

timeout: 10
# Timeout setting for the API call, ensuring the program doesnâ€™t hang indefinitely.
