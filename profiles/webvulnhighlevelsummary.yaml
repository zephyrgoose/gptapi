# webvulnhighlevelsummary.yaml
# This file defines the configuration for generating a high-level summary of a threat report
# based on data provided by the ThreatIntelligenceScraperSchema.

# Model to be used.
model: gpt-4o-2024-08-06

credentials_file: ./keys.yaml
# External file where API keys are stored.

system_prompt: |
  You are tasked with generating a comprehensive summary of complex threat intelligence data. Your summary should be divided into two parts: a high-level summary and a low-level summary.

  The high-level summary should provide an overarching view of the entire threat report, focusing on emerging trends, strategic shifts, and the broader state of cybersecurity. This section should contextualize the data within the wider landscape of cybersecurity, geopolitics, and industry trends, offering insights into the overall direction and implications of the threats identified.

  The low-level summary should delve into specific details, covering individual threats, vulnerabilities, tactics, and other technical aspects mentioned in the report. This section should provide a detailed examination of the specific issues and elements that make up the threat landscape.

  Additionally, identify ten major aspects that are most significant to understanding the threat environment, and pinpoint ten subtle but important details that might be easily overlooked but are crucial for a deeper understanding. Conclude with actionable recommendations for mitigating the identified risks and vulnerabilities.
  
  After completing the general summary, produce specific, succinct reports for the following business units, focusing only on whatâ€™s relevant to them:

  - **Infrastructure Team** (topics like Windows, Azure, Active Directory, Entra ID, PowerShell, Windows Server)
  - **Platforms Team** (topics like Puppet, RHEL, CentOS, Linux, AWS, Terraform, GitHub)

  If there is no relevant information for a team, leave their section blank. The goal is to ensure that each team receives a summary that is directly applicable to their work, providing them with clear, actionable insights or noting when no specific threats pertain to their responsibilities.

parameters:
  max_tokens: 4000
  temperature: 0.8
  top_p: 0.9
  frequency_penalty: 0.2
  presence_penalty: 0.3
  n: 1
  stop: None
  # OpenAI API parameters:
  # - max_tokens limits the summary length to ensure it is concise but informative.
  # - temperature set to 0.8 to allow more variability and less bias toward initial or recent entries.
  # - top_p at 0.9 ensures a wider sampling, encouraging a broader view across the report.
  # - frequency_penalty and presence_penalty ensure that the model focuses on diverse parts of the report.
  # - stop condition removed to allow thorough processing of all input data.

structured_output:
  name: ThreatReportSummarySchema
  enable: true
  strict: true
  schema:
    type: object
    properties:
      highLevelSummary:
        type: string
        description: "A high-level overview that contextualizes the entire contents of the threat report, focusing on emerging trends, changing threats, and the overall state of cybersecurity and strategic considerations."
      lowLevelSummary:
        type: string
        description: "A detailed summary that covers specific threats, vulnerabilities, and other technical aspects mentioned in the report, providing an in-depth look at the specifics."
      reportDate:
        type: string
        format: date-time
        description: "The timestamp indicating when the summary was generated, following ISO 8601 format."
      tenBiggestThings:
        type: array
        description: "A list of the ten most important aspects from the threat report, with each entry providing a succinct detail."
        items:
          type: object
          properties:
            title:
              type: string
              description: "A brief title or description of the key point."
            detail:
              type: string
              description: "A succinct detail explaining why this point is critical, particularly in the broader strategic context."
          required:
            - title
            - detail
      highlights:
        type: array
        description: "A list of critical points, trends, or vulnerabilities that are of particular concern."
        items:
          type: string
      tenMissableThings:
        type: array
        description: "A list of ten subtle or easily overlooked aspects from the threat report that are still important and noteworthy."
        items:
          type: object
          properties:
            title:
              type: string
              description: "A brief title or description of the missable point."
            detail:
              type: string
              description: "A succinct detail explaining why this point, though easily overlooked, is significant."
          required:
            - title
            - detail
      recommendations:
        type: array
        description: "Suggested actions or best practices for mitigating identified threats."
        items:
          type: string
      infraTeamSummary:
        type: string
        description: "A summary specifically for the Infrastructure Team, highlighting relevant issues related to Windows, Azure, Active Directory, Entra ID, PowerShell, Windows Server. This should be blank if nothing relevant is found."
      platformsTeamSummary:
        type: string
        description: "A summary specifically for the Platforms Team, highlighting relevant issues related to Puppet, RHEL, CentOS, Linux, AWS, Terraform, GitHub. This should be blank if nothing relevant is found."
    required:
      - highLevelSummary
      - lowLevelSummary
      - reportDate
      - tenBiggestThings
      - highlights
      - tenMissableThings
      - recommendations
      - infraTeamSummary
      - platformsTeamSummary


logging:
  enable: true
  log_level: INFO
  log_file: ./logs/threat_report_summary.log
  # Logs are vital for tracking API interactions and debugging.
  # The log file captures the entire process, including errors and response times.

timeout: 15
# The timeout has been slightly increased to 15 seconds to accommodate the complexity of processing large data sets.
